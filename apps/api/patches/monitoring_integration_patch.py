# üîÑ –ü–∞—Ç—á –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ main.py
# –§–∞–π–ª: patches/monitoring_integration_patch.py

"""
–ü–∞—Ç—á –¥–ª—è –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.
–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –æ–±—Ä–∞—Ç–Ω—É—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∏ –ø–ª–∞–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥.
"""

# =================== –î–û–ë–ê–í–ò–¢–¨ –í –ù–ê–ß–ê–õ–û main.py ===================

# üöÄ –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
import os
from datetime import datetime, timezone

# –ò–º–ø–æ—Ä—Ç –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
try:
    from infrastructure.monitoring.migration_adapter import (
        get_monitoring_system,
        HybridMonitoringSystem,
        EventType as NewEventType,
        LogLevel
    )
    from config.monitoring import get_hybrid_monitoring_config, ensure_log_directory
    OPTIMIZED_MONITORING_AVAILABLE = True
except ImportError:
    OPTIMIZED_MONITORING_AVAILABLE = False
    print("‚ö†Ô∏è –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞—Ä–∞—è —Å–∏—Å—Ç–µ–º–∞")

# =================== –ó–ê–ú–ï–ù–ò–¢–¨ –°–ï–ö–¶–ò–Æ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò ===================

# –°–¢–ê–†–´–ô –ö–û–î (–∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å):
# from monitoring_system import (
#     analytics_logger,
#     track_analysis_operation,
#     log_analysis_event,
#     get_system_health,
#     get_analytics_summary,
#     EventType
# )

# –ù–û–í–´–ô –ö–û–î:
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≤—ã–±–æ—Ä–æ–º
if OPTIMIZED_MONITORING_AVAILABLE:
    # –°–æ–∑–¥–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
    ensure_log_directory()
    monitoring_config = get_hybrid_monitoring_config()
    optimized_monitoring = get_monitoring_system()
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫—É—é —Å–∏—Å—Ç–µ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
    USE_OPTIMIZED_MONITORING = monitoring_config.get('use_new_system', True)
    COMPARE_MONITORING_SYSTEMS = monitoring_config.get('compare_systems', False)
    
    print(f"üöÄ –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞:")
    print(f"   ‚îî‚îÄ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: {'‚úÖ' if monitoring_config.get('use_new_system') else '‚ùå'}")
    print(f"   ‚îî‚îÄ –°—Ç–∞—Ä–∞—è —Å–∏—Å—Ç–µ–º–∞: {'‚úÖ' if monitoring_config.get('use_old_system') else '‚ùå'}")
    print(f"   ‚îî‚îÄ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º: {'‚úÖ' if COMPARE_MONITORING_SYSTEMS else '‚ùå'}")
    
    # –ê–ª–∏–∞—Å—ã –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    if USE_OPTIMIZED_MONITORING:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É —á–µ—Ä–µ–∑ –∞–¥–∞–ø—Ç–µ—Ä
        analytics_logger = optimized_monitoring
        track_analysis_operation = optimized_monitoring.track_operation
        
        async def log_analysis_event(event_type, **kwargs):
            await optimized_monitoring.log_event(event_type, **kwargs)
        
        def get_system_health():
            health = optimized_monitoring.health_check()
            return health.get('new_system', health.get('old_system', {'status': 'unknown'}))
        
        def get_analytics_summary(session_id=None):
            summary = optimized_monitoring.get_analytics_summary(session_id)
            return summary.get('new_system', summary.get('old_system', {}))
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–µ —Ç–∏–ø—ã —Å–æ–±—ã—Ç–∏–π
        EventType = NewEventType
    else:
        # Fallback –∫ —Å—Ç–∞—Ä–æ–π —Å–∏—Å—Ç–µ–º–µ
        from monitoring_system import (
            analytics_logger,
            track_analysis_operation,
            log_analysis_event,
            get_system_health,
            get_analytics_summary,
            EventType
        )
else:
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—É—é —Å–∏—Å—Ç–µ–º—É –∫–∞–∫ fallback
    from monitoring_system import (
        analytics_logger,
        track_analysis_operation,
        log_analysis_event,
        get_system_health,
        get_analytics_summary,
        EventType
    )
    USE_OPTIMIZED_MONITORING = False
    COMPARE_MONITORING_SYSTEMS = False

# =================== –ú–û–î–ò–§–ò–ö–ê–¶–ò–Ø STARTUP EVENT ===================

# –ó–ê–ú–ï–ù–ò–¢–¨ startup_event:
@app.on_event("startup")
async def startup_event():
    global ai_manager
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    init_database()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AI —Å–µ—Ä–≤–∏—Å–æ–≤
    try:
        ai_manager = initialize_ai_services()
        if ai_manager.services:
            logger.info(f"ü§ñ AI —Å–µ—Ä–≤–∏—Å—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã: {list(ai_manager.services.keys())}")
        else:
            logger.warning("‚ö†Ô∏è AI —Å–µ—Ä–≤–∏—Å—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ OPENAI_API_KEY –∏–ª–∏ ANTHROPIC_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AI —Å–µ—Ä–≤–∏—Å–æ–≤: {str(e)}")
        ai_manager = None
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ä—Ç–∞ —Å–∏—Å—Ç–µ–º—ã –≤ –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    if OPTIMIZED_MONITORING_AVAILABLE and USE_OPTIMIZED_MONITORING:
        await log_analysis_event(
            EventType.SYSTEM_START,
            metadata={
                "startup_time": datetime.now(timezone.utc).isoformat(),
                "ai_services_available": ai_manager is not None,
                "monitoring_system": "optimized" if USE_OPTIMIZED_MONITORING else "legacy"
            }
        )
    
    print("üöÄ MCP Code Analyzer API —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º –∑–∞–ø—É—â–µ–Ω!")
    print("üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs")
    print("ü§ñ AI —Å—Ç–∞—Ç—É—Å: http://localhost:8000/api/ai-status")
    if OPTIMIZED_MONITORING_AVAILABLE:
        print("üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: http://localhost:8000/api/monitoring/health-optimized")

# =================== –î–û–ë–ê–í–ò–¢–¨ –ù–û–í–´–ï ENDPOINTS ===================

# –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–¥ if __name__ == "__main__":

@app.get("/api/monitoring/health-optimized")
async def get_optimized_monitoring_health():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    if not OPTIMIZED_MONITORING_AVAILABLE:
        raise HTTPException(status_code=503, detail="–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    
    try:
        health = optimized_monitoring.health_check()
        
        return {
            "optimized_monitoring_available": True,
            "health": health,
            "configuration": {
                "use_optimized": USE_OPTIMIZED_MONITORING,
                "compare_systems": COMPARE_MONITORING_SYSTEMS
            },
            "timestamp": datetime.now(timezone.utc).isoformat()
        }
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {str(e)}")

@app.get("/api/monitoring/comparison")
async def get_monitoring_comparison():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    if not (OPTIMIZED_MONITORING_AVAILABLE and COMPARE_MONITORING_SYSTEMS):
        raise HTTPException(
            status_code=404, 
            detail="–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ MONITORING_COMPARE=true"
        )
    
    try:
        analytics = optimized_monitoring.get_analytics_summary()
        comparison = analytics.get('comparison')
        
        if not comparison:
            return {
                "message": "–î–∞–Ω–Ω—ã–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –µ—â–µ –Ω–µ –Ω–∞–∫–æ–ø–ª–µ–Ω—ã",
                "suggestion": "–í—ã–ø–æ–ª–Ω–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–ø–µ—Ä–∞—Ü–∏–π –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"
            }
        
        return {
            "comparison_report": comparison,
            "analytics": {
                "new_system": analytics.get('new_system'),
                "old_system": analytics.get('old_system')
            },
            "generated_at": datetime.now(timezone.utc).isoformat()
        }
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è: {str(e)}")

@app.post("/api/monitoring/switch-system")
async def switch_monitoring_system(use_optimized: bool):
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Å–∏—Å—Ç–µ–º–∞–º–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    if not OPTIMIZED_MONITORING_AVAILABLE:
        raise HTTPException(status_code=503, detail="–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    
    global USE_OPTIMIZED_MONITORING
    USE_OPTIMIZED_MONITORING = use_optimized
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–∞
    os.environ['MONITORING_USE_NEW'] = 'true' if use_optimized else 'false'
    
    return {
        "message": f"–°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∞ –Ω–∞ {'–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é' if use_optimized else '—Å—Ç–∞—Ä—É—é'}",
        "current_system": "optimized" if use_optimized else "legacy",
        "restart_required": False,
        "timestamp": datetime.now(timezone.utc).isoformat()
    }

# =================== SHUTDOWN EVENT ===================

# –î–æ–±–∞–≤–∏—Ç—å shutdown event –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:
@app.on_event("shutdown")
async def shutdown_event():
    """–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã"""
    if OPTIMIZED_MONITORING_AVAILABLE and USE_OPTIMIZED_MONITORING:
        try:
            await log_analysis_event(
                EventType.SYSTEM_SHUTDOWN,
                metadata={
                    "shutdown_time": datetime.now(timezone.utc).isoformat(),
                    "monitoring_system": "optimized"
                }
            )
            await optimized_monitoring.shutdown()
            logger.info("‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {str(e)}")

# =================== –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø ===================

# –î–æ–±–∞–≤–∏—Ç—å –≤ .env –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:
"""
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
MONITORING_USE_NEW=true
MONITORING_USE_OLD=false
MONITORING_COMPARE=true
MONITORING_ENV=development
MONITORING_LOG_LEVEL=STANDARD
MONITORING_MAX_EVENTS=1000
MONITORING_BATCH_SIZE=50
MONITORING_SAMPLE_INTERVAL=30.0
MONITORING_AUTO_CLEANUP=true
MONITORING_LOG_FILE=logs/mcp_analyzer_optimized.log
MONITORING_CONSOLE=true
MONITORING_MEMORY_THRESHOLD=85.0
MONITORING_CPU_THRESHOLD=80.0
"""

# =================== –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ü–†–ò–ú–ï–ù–ï–ù–ò–Æ ===================

"""
–ü–æ—à–∞–≥–æ–≤–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ç—á–∞:

1. –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é main.py:
   cp main.py main.py.backup

2. –î–æ–±–∞–≤–∏—Ç—å –∏–º–ø–æ—Ä—Ç—ã –≤ –Ω–∞—á–∞–ª–æ main.py (–ø–æ—Å–ª–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤)

3. –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ä—ã–µ –∏–º–ø–æ—Ä—Ç—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ

4. –ó–∞–º–µ–Ω–∏—Ç—å startup_event –Ω–∞ –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é

5. –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ endpoints –ø–µ—Ä–µ–¥ if __name__ == "__main__"

6. –î–æ–±–∞–≤–∏—Ç—å shutdown_event

7. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

8. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç:
   python tests/test_monitoring_optimization.py

9. –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å:
   - http://localhost:8000/api/monitoring/health-optimized
   - http://localhost:8000/api/monitoring/comparison

10. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è:
    curl -X POST "http://localhost:8000/api/monitoring/switch-system?use_optimized=true"
"""
