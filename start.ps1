# MCP Code Analyzer - PowerShell Start Script
Write-Host "üöÄ –ó–∞–ø—É—Å–∫ MCP Code Analyzer..." -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
Write-Host "üì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..." -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
if (-not (Get-Command node -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!" -ForegroundColor Red
    Write-Host "üì• –°–∫–∞—á–∞–π—Ç–µ —Å https://nodejs.org/" -ForegroundColor Yellow
    Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
if (-not (Get-Command python -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Python –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!" -ForegroundColor Red
    Write-Host "üì• –°–∫–∞—á–∞–π—Ç–µ —Å https://python.org/" -ForegroundColor Yellow
    Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞"
    exit 1
}

Write-Host "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã!" -ForegroundColor Green

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –º–æ–Ω–æ—Ä–µ–ø–æ
Write-Host "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..." -ForegroundColor Yellow
npm install

# –°–æ–±–∏—Ä–∞–µ–º MCP —Å–µ—Ä–≤–µ—Ä
Write-Host "üî® –°–æ–±–∏—Ä–∞–µ–º MCP —Å–µ—Ä–≤–µ—Ä..." -ForegroundColor Yellow
Set-Location "packages\mcp-servers"
npm install
npm run build
Set-Location "..\..\"

# –ó–∞–ø—É—Å–∫–∞–µ–º FastAPI backend
Write-Host "üêç –ó–∞–ø—É—Å–∫–∞–µ–º FastAPI backend..." -ForegroundColor Yellow
Set-Location "apps\api"
pip install -r requirements.txt

# –ó–∞–ø—É—Å–∫–∞–µ–º backend –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
$backendJob = Start-Job -ScriptBlock {
    Set-Location $using:PWD
    Set-Location "apps\api"
    python main.py
}

Set-Location "..\..\"

# –ñ–¥–µ–º –ø–æ–∫–∞ backend –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
Write-Host "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ backend..." -ForegroundColor Yellow
Start-Sleep -Seconds 5

# –ó–∞–ø—É—Å–∫–∞–µ–º Next.js frontend
Write-Host "‚öõÔ∏è –ó–∞–ø—É—Å–∫–∞–µ–º Next.js frontend..." -ForegroundColor Yellow
Set-Location "apps\web"
npm install

# –ó–∞–ø—É—Å–∫–∞–µ–º frontend –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
$frontendJob = Start-Job -ScriptBlock {
    Set-Location $using:PWD
    Set-Location "apps\web"
    npm run dev
}

Set-Location "..\..\"

Write-Host ""
Write-Host "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!" -ForegroundColor Green
Write-Host "üåê Frontend: http://localhost:3000" -ForegroundColor Cyan
Write-Host "üìö API Docs: http://localhost:8000/docs" -ForegroundColor Cyan
Write-Host ""
Write-Host "‚ö†Ô∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C" -ForegroundColor Yellow

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
function Stop-Services {
    Write-Host ""
    Write-Host "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..." -ForegroundColor Yellow
    
    Stop-Job $backendJob -ErrorAction SilentlyContinue
    Remove-Job $backendJob -ErrorAction SilentlyContinue
    
    Stop-Job $frontendJob -ErrorAction SilentlyContinue  
    Remove-Job $frontendJob -ErrorAction SilentlyContinue
    
    # –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç–∞—Ö
    try {
        $processes = Get-NetTCPConnection -LocalPort 3000,8000 -ErrorAction SilentlyContinue
        if ($processes) {
            $processes | ForEach-Object {
                Stop-Process -Id $_.OwningProcess -Force -ErrorAction SilentlyContinue
            }
        }
    } catch {
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
    }
    
    Write-Host "‚úÖ –ì–æ—Ç–æ–≤–æ!" -ForegroundColor Green
}

# –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º Ctrl+C
try {
    while ($true) {
        Start-Sleep -Seconds 1
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á
        if ($backendJob.State -eq "Failed") {
            Write-Host "‚ùå Backend –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π!" -ForegroundColor Red
            Receive-Job $backendJob
            break
        }
        
        if ($frontendJob.State -eq "Failed") {
            Write-Host "‚ùå Frontend –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π!" -ForegroundColor Red
            Receive-Job $frontendJob
            break
        }
    }
} catch [System.Management.Automation.PipelineStoppedException] {
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª Ctrl+C
} finally {
    Stop-Services
}
